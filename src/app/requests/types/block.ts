// Code generated by tygo. DO NOT EDIT.
/* eslint-disable */
import type { ApiDataResponse, Hash, Address, ClElValue } from './common'

//////////
// source: block.go

/**
 * count indicator per block details tab; each tab is only present if count > 0
 */
export interface BlockSummary {
	transactions: number /* uint64 */
	votes: number /* uint64 */
	attestations: number /* uint64 */
	withdrawals: number /* uint64 */
	bls_changes: number /* uint64 */
	voluntary_exits: number /* uint64 */
	blobs: number /* uint64 */
}
export type InternalGetBlockResponse = ApiDataResponse<BlockSummary>
export interface BlockExecutionPayload {
	block_hash: Hash
	parent_hash: Hash
	priority_fees_recipient: Address
	gas_used: number /* uint64 */
	gas_limit: number /* uint64 */
	base_fee_per_gas: string /* decimal.Decimal */
	base_fees: string /* decimal.Decimal */
}
export interface BlockConsensusLayer {
	state_root: Hash
	signature: Hash
	randao_reveal: Hash
	attestations: number /* uint64 */
	votes: number /* uint64 */
	voting_validators: number /* uint64 */
	voluntary_exits: number /* uint64 */
	attester_slashings: number /* uint64 */
	proposer_slashings: number /* uint64 */
	deposit: number /* uint64 */
	sync_committee: BlockSyncCommittee
	eth1_data: BlockEth1Data
	graffiti: string
}
export interface BlockSyncCommittee {
	participation: number /* float64 */
	bits: boolean[]
	sync_committee: number /* uint64 */[]
	signature: Hash
}
export interface BlockEth1Data {
	block_hash: Hash
	deposit_count: number /* uint64 */
	deposit_root: Hash
}
export interface BlobInfo {
	name: number /* uint64 */
	tx_count: number /* uint64 */
	gas_used: number /* uint64 */
	gas_price?: string /* decimal.Decimal */
	excess_gas: number /* uint64 */
	burned_fees?: string /* decimal.Decimal */
}
export interface BlockOverview {
	/**
	 * General
	 */
	block: number /* uint64 */
	time: number /* int64 */
	/**
	 * Old blocks only
	 */
	miner?: Address
	rewards?: string /* decimal.Decimal */
	tx_fees?: string /* decimal.Decimal */
	gas_usage?: string /* decimal.Decimal */
	gas_limit?: {
		value: number /* uint64 */
		percent: number /* float64 */
	}
	lowest_gas_price?: string /* decimal.Decimal */
	difficulty?: string /* decimal.Decimal */
	/**
	 * base + burned fee only present post EIP-1559
	 */
	base_fee?: string /* decimal.Decimal */
	burned_fees?: string /* decimal.Decimal */
	extra?: string
	hash?: Hash
	parent_hash?: Hash
	/**
	 * New blocks only
	 */
	mev_tags?: {
		name: string
		color: string
	}[]
	epoch?: number /* uint64 */
	slot?: number /* uint64 */
	proposer?: number /* uint64 */
	proposer_reward?: ClElValue<string /* decimal.Decimal */>
	proposer_reward_recipient?: Address
	status?: {
		proposal: 'proposed' | 'orphaned' | 'missed' | 'scheduled'
		finalized: 'finalized' | 'justified' | 'not_finalized'
	}
	priority_fees?: string /* decimal.Decimal */
	transactions?: {
		general: number /* uint64 */
		internal: number /* uint64 */
		blob?: number /* uint64 */
	}
	block_root?: Hash
	parent_root?: Hash
	execution_payload?: BlockExecutionPayload
	consensus_layer?: BlockConsensusLayer
}
export type InternalGetBlockOverviewResponse = ApiDataResponse<BlockOverview>
export interface BlockTransactionTableRow {
	success: boolean
	tx_hash: Hash
	method: string
	block: number /* uint64 */
	age: number /* uint64 */
	from: Address
	type: 'out' | 'in' | 'out_in' | 'self' | 'contract'
	to: Address
	value: string /* decimal.Decimal */
	gas_price: string /* decimal.Decimal */
	tx_fee: string /* decimal.Decimal */
}
export type InternalGetBlockTransactionsResponse = ApiDataResponse<BlockTransactionTableRow[]>
export interface BlockVoteTableRow {
	allocated_slot: number /* uint64 */
	committee: number /* uint64 */
	included_in_block: number /* uint64 */
	validators: number /* uint64 */[]
}
export type InternalGetBlockVotesResponse = ApiDataResponse<BlockVoteTableRow[]>
export interface EpochInfo {
	epoch: number /* uint64 */
	block_root: Hash
}
export interface BlockAttestationTableRow {
	slot: number /* uint64 */
	committee_index: number /* uint64 */
	aggregation_bits: boolean[]
	validators: number /* uint64 */[]
	beacon_block_root: Hash
	source: EpochInfo
	target: EpochInfo
	signature: Hash
}
export type InternalGetBlockAttestationsResponse = ApiDataResponse<BlockAttestationTableRow[]>
export interface BlockWithdrawalTableRow {
	/**
	 * no design present yet, TODO confirm this
	 */
	index: number /* uint64 */
	epoch: number /* uint64 */
	slot: number /* uint64 */
	age: number /* uint64 */
	recipient: Address
	amount: string /* decimal.Decimal */
}
export type InternalGetBlockWtihdrawalsResponse = ApiDataResponse<BlockWithdrawalTableRow[]>
export interface BlockBlsChangeTableRow {
	index: number /* uint64 */
	signature: Hash
	bls_pubkey: Hash
	new_withdrawal_address: Address
}
export type InternalGetBlockBlsChangesResponse = ApiDataResponse<BlockBlsChangeTableRow[]>
export interface BlockVoluntaryExitTableRow {
	validator: number /* uint64 */
	signature: Hash
}
export type InternalGetBlockVoluntaryExitsResponse = ApiDataResponse<BlockVoluntaryExitTableRow[]>
export interface BlockBlobTableRow {
	versioned_hash: Hash
	commitment: Hash
	proof: Hash
	size: number /* uint64 */
	transaction_hash: Hash
	block: number /* uint64 */
	data: string
}
export type InternalGetBlockBlobsResponse = ApiDataResponse<BlockBlobTableRow[]>
